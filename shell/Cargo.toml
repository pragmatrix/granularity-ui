[package]
name = "massive-shell"
version = "0.1.0"
edition = "2021"

[dependencies]
massive-geometry = { workspace = true }
massive-renderer = { workspace = true }
massive-shapes = { workspace = true }
massive-scene = { workspace = true }
winit = { workspace = true }
log = { workspace = true }
wgpu = { workspace = true }
anyhow = { workspace = true }
cosmic-text = { workspace = true }
cgmath = { workspace = true }


[dev-dependencies]
shared = { path = "shared" }
itertools = { workspace = true }

# markdown

swash = { workspace = true }
bytemuck = { workspace = true }
env_logger = { workspace = true }
derive_more = { workspace = true }
inlyne = { workspace = true }

# code (can't be compiled on wasm32 for now).

tracing = { workspace = true }
tracing-subscriber = { workspace = true }
tracing-flame = { workspace = true }
tracing-chrome = { workspace = true }

chrono = { workspace = true }
serde = { workspace = true }
serde_tuple = { workspace = true }
serde_json = { workspace = true }
postcard = { workspace = true }

image = "0.25.1" 

# syntax

syntect = "5.2.0"

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]

load-cargo = { path = "../rust-analyzer/crates/load-cargo" }
project-model = { path = "../rust-analyzer/crates/project-model" }
vfs = { path = "../rust-analyzer/crates/vfs" }
base-db = { path = "../rust-analyzer/crates/base-db" }
syntax = { path = "../rust-analyzer/crates/syntax" }
# Semantics
hir = { path = "../rust-analyzer/crates/hir" }
# Syntax highlighting, AnalysisHost
ide = { path = "../rust-analyzer/crates/ide" }

[target.'cfg(target_arch = "wasm32")'.dependencies]

getrandom = { version = "0.2.12", features = ["js"] }
wgpu = { workspace = true, features = ["webgl"] }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]

tokio = { workspace = true }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]

console_error_panic_hook = "0.1.7"
console_log = "1.0.0"
wasm-bindgen-futures = "0.4.42"
web-sys = "0.3.69"
wasm-bindgen = "0.2.92"
